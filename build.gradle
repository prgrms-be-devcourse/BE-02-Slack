plugins {
    id 'org.springframework.boot' version '2.6.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.prgrms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.8'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.8'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.8'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.6.8'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.6.8'
    implementation 'org.springframework:spring-messaging:5.3.20'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.5.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.8'
    testImplementation 'org.springframework.security:spring-security-test:5.6.1'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'
    testImplementation 'org.mockito:mockito-inline:4.6.1'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}